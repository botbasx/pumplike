from pystyle import Colors, Colorate
import requests
import json
import os
botbas = """
    ____  ____  __________  ___   ______  __
   / __ )/ __ \/_  __/ __ )/   | / ___/ |/ /
  / __  / / / / / / / __  / /| | \__ \|   / 
 / /_/ / /_/ / / / / /_/ / ___ |___/ /   |  
/_____/\____/ /_/ /_____/_/  |_/____/_/|_|  

        https://github.com/botbasx 
"""
welcome = """
‚îÄ‚îÄ‚îÄ‚ñÑ‚ñÄ‚ñÄ‚ñÄ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÄ‚ñÄ‚ñÄ‚ñÑ‚îÄ‚îÄ‚îÄ
‚îÄ‚îÄ‚îÄ‚ñà‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñà‚îÄ‚îÄ‚îÄ
‚îÄ‚îÄ‚îÄ‚îÄ‚ñà‚ñë‚ñë‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñë‚ñë‚ñà‚îÄ‚îÄ‚îÄ‚îÄ
‚îÄ‚ñÑ‚ñÑ‚îÄ‚îÄ‚ñà‚ñë‚ñë‚ñë‚ñÄ‚ñà‚ñÄ‚ñë‚ñë‚ñë‚ñà‚îÄ‚îÄ‚ñÑ‚ñÑ‚îÄ
‚ñà‚ñë‚ñë‚ñà‚îÄ‚ñÄ‚ñÑ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñÑ‚ñÄ‚îÄ‚ñà‚ñë‚ñë‚ñà
‚ñà‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñà
‚ñà‚ñë‚ñë‚ï¶‚îÄ‚ï¶‚ïî‚ïó‚ï¶‚îÄ‚ïî‚ïó‚ïî‚ïó‚ïî‚ï¶‚ïó‚ïî‚ïó‚ñë‚ñë‚ñà
‚ñà‚ñë‚ñë‚ïë‚ïë‚ïë‚ï†‚îÄ‚ïë‚îÄ‚ïë‚îÄ‚ïë‚ïë‚ïë‚ïë‚ïë‚ï†‚îÄ‚ñë‚ñë‚ñà
‚ñà‚ñë‚ñë‚ïö‚ï©‚ïù‚ïö‚ïù‚ïö‚ïù‚ïö‚ïù‚ïö‚ïù‚ï©‚îÄ‚ï©‚ïö‚ïù‚ñë‚ñë‚ñà
‚ñà‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñà

"""
def main():
    print(Colorate.Horizontal(Colors.rainbow, welcome))
    print(Colorate.Horizontal(Colors.rainbow, "‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏õ‡∏±‡πâ‡∏°‡πÑ‡∏•‡∏Ñ‡πå!"))
    print(Colorate.Horizontal(Colors.rainbow, "‡∏ü‡∏±‡∏á‡∏ä‡∏±‡πà‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ"))
    print(Colorate.Horizontal(Colors.rainbow, "1.‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï"))
    print(Colorate.Horizontal(Colors.rainbow, "2.‡∏õ‡∏±‡πâ‡∏°‡πÑ‡∏•‡∏Ñ‡πå"))
    choice = input(Colorate.Horizontal(Colors.rainbow, "‡πÉ‡∏™‡πà‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å: "))
    os.system("clear")
    print(Colorate.Horizontal(Colors.rainbow, botbas))
    if choice == '1':
        creditpump()
    elif choice == '2':
        link = input(Colorate.Horizontal(Colors.rainbow, "‡πÉ‡∏™‡πà‡∏•‡∏¥‡∏á‡∏Å‡πå: "))
        id_value = input(Colorate.Horizontal(Colors.rainbow, "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏µ‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô\n1 = üëç ‡πÑ‡∏•‡∏Ñ‡πå\n2 = ‚ù§Ô∏è ‡∏´‡∏±‡∏ß‡πÉ‡∏à\n3 = üòÆ ‡∏ß‡πâ‡∏≤‡∏ß\n4 = üòÜ ‡∏Ç‡∏≥\n7 = üò• ‡πÄ‡∏®‡∏£‡πâ‡∏≤\n8 = üò° ‡πÇ‡∏Å‡∏£‡∏ò\n‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£:>>"))
        amount = input(Colorate.Horizontal(Colors.rainbow, "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: "))
        make_pump(link, id_value, amount)
    else:
        print(Colorate.Horizontal(Colors.rainbow, "‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î...."))
def creditpump():
    with open("api.txt", "r") as f:
        api_key = f.read().strip()
    url = "https://v2.sc24shop.store/api/v2"
    request_body = {
        "key": api_key,
        "action": "balance"
    }
    response = requests.post(url, json=request_body)
    response_data = json.loads(response.text)
    if response.status_code == 200 and 'balance' in response_data:
        balance = response_data['balance']
        currency = response_data['currency']
        message = "‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠: {} {}".format(balance, currency)
        print_rainbow(message)
    else:
        error_message = "Error occurred: {}".format(response_data)
        print_rainbow(error_message)
def make_pump(link, id_value, amount):
    with open("api.txt", "r") as f:
        api_key = f.read().strip()    
    url = "https://v2.sc24shop.store/api/v3/emojithai/normal"
    headers = {"Content-Type": "application/json"}
    request_body = {
        "key": api_key,
        "link": link,
        "id": id_value,
        "amount": amount
    }
    os.system("clear")
    print(Colorate.Horizontal(Colors.rainbow, botbas))
    print(Colorate.Horizontal(Colors.rainbow, "‡∏•‡∏¥‡∏á‡∏Å‡πå: {}\n‡∏≠‡∏µ‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ôID: {}\n‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: {}".format(link,id_value,amount)))
    response = requests.post(url, headers=headers, data=json.dumps(request_body))
    if response.status_code == 200:
        response_data = response.json()
        if response_data.get('success'):
            return response_data
        else:
            print(Colorate.Horizontal(Colors.rainbow, "‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠: {}".format(response_data.get('message'))))
    else:
        print(Colorate.Horizontal(Colors.rainbow, "‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÇ‡∏Ñ‡πä‡∏î: {}".format(response.status_code)))
    return None
def print_rainbow(message):
    colors = ['\033[91m', '\033[93m', '\033[92m', '\033[94m', '\033[95m', '\033[96m']
    reset_color = '\033[0m'
    rainbow_message = ''.join([f"{colors[i % len(colors)]}{char}" for i, char in enumerate(message)])
    print(rainbow_message + reset_color)
main()